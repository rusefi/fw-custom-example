name: Create Board Firmware

on:

  
  push:
  #  pull_request:
  workflow_dispatch:

jobs:
  build-firmware:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set run variables
        id: set-variables
        run: |
          if [ "${{github.event_name}}" = "schedule" ]; then
            echo "release_date=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          fi
          if [ "${{github.event_name}}" == "push" -o "${{github.event_name}}" == "schedule" -o "${{github.event_name}}" == "workflow_dispatch" ] && [ "${{github.ref}}" == "refs/heads/master" -o "${{github.ref}}" == "refs/heads/main" ]; then
            echo 'push=true' >> $GITHUB_OUTPUT
            echo 'sim=true' >> $GITHUB_OUTPUT
          else
            echo 'push=false' >> $GITHUB_OUTPUT
            echo 'sim=false' >> $GITHUB_OUTPUT
          fi

      - uses: ./ext/rusefi/.github/workflows/custom-board-build
        with:
          new_tag: ${{steps.set-variables.outputs.release_date}}
          artifacts: bin srec hex list map elf bundle autoupdate
          uploads: ini ${{steps.set-variables.outputs.upload}}
          push: ${{steps.set-variables.outputs.push}}
          run_simulator: ${{ steps.set-variables.outputs.sim }}
          MY_REPO_PAT: ${{secrets.MY_REPO_PAT}}
          RUSEFI_ONLINE_FTP_USER: ${{secrets.RUSEFI_ONLINE_FTP_USER}}
          RUSEFI_ONLINE_FTP_PASS: ${{secrets.RUSEFI_ONLINE_FTP_PASS}}
          RUSEFI_FTP_SERVER: ${{secrets.RUSEFI_FTP_SERVER}}
          RUSEFI_SSH_SERVER: ${{secrets.RUSEFI_SSH_SERVER}}
          RUSEFI_SSH_USER: ${{secrets.RUSEFI_SSH_USER}}
          RUSEFI_SSH_PASS: ${{secrets.RUSEFI_SSH_PASS}}
          ADDITIONAL_ENV: ${{secrets.ADDITIONAL_ENV}}
